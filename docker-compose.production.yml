version: '3.8'

services:
  bunbot:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: bunbot-production
    restart: unless-stopped
    environment:
      # Discord Configuration
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_APPLICATION_ID=${DISCORD_APPLICATION_ID}
      
      # Production Settings
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - DEBUG=false
      
      # Second Life Bridge Configuration
      - SL_BRIDGE_ENABLED=true
      - SL_BRIDGE_HOST=0.0.0.0
      - SL_BRIDGE_PORT=8080
      - SL_BRIDGE_SECRET=${SL_BRIDGE_SECRET:-bunbot_secret_key}
      
      # Database Configuration
      - DATABASE_URL=sqlite:///data/bunbot.db
      
      # Audio Configuration
      - AUDIO_QUALITY=high
      - AUDIO_NORMALIZATION=true
      - AUDIO_COMPRESSION=true
      
      # Monitoring Configuration
      - MONITORING_ENABLED=true
      - HEALTH_CHECK_INTERVAL=30
    
    ports:
      - "8080:8080"  # SL Bridge API
    
    volumes:
      - bunbot_data:/app/data
      - bunbot_logs:/app/logs
      - bunbot_temp:/app/temp
    
    networks:
      - bunbot_network
    
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/api/v1/status/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    # Resource limits for production
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    
    # Security configuration
    security_opt:
      - no-new-privileges:true
    read_only: false  # Needs write for database and logs
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  # Optional: Redis for caching (if needed)
  redis:
    image: redis:7-alpine
    container_name: bunbot-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 128mb --maxmemory-policy allkeys-lru
    volumes:
      - bunbot_redis:/data
    networks:
      - bunbot_network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'
    profiles:
      - redis  # Only start with --profile redis

  # Optional: Monitoring with Prometheus (if needed)
  prometheus:
    image: prom/prometheus:latest
    container_name: bunbot-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - bunbot_prometheus:/prometheus
    networks:
      - bunbot_network
    profiles:
      - monitoring  # Only start with --profile monitoring

  # Optional: Grafana for visualization (if needed)
  grafana:
    image: grafana/grafana:latest
    container_name: bunbot-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    volumes:
      - bunbot_grafana:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - bunbot_network
    depends_on:
      - prometheus
    profiles:
      - monitoring  # Only start with --profile monitoring

# Persistent volumes
volumes:
  bunbot_data:
    driver: local
    name: bunbot_data
  bunbot_logs:
    driver: local
    name: bunbot_logs
  bunbot_temp:
    driver: local
    name: bunbot_temp
  bunbot_redis:
    driver: local
    name: bunbot_redis
  bunbot_prometheus:
    driver: local
    name: bunbot_prometheus
  bunbot_grafana:
    driver: local
    name: bunbot_grafana

# Network configuration
networks:
  bunbot_network:
    driver: bridge
    name: bunbot_network
    ipam:
      config:
        - subnet: 172.20.0.0/16
